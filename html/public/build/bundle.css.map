{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\CodeMirror.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n\timport { onMount } from 'svelte';\n\n\timport './lib/codemirror/lua.js';\n\timport JSONEditor from './lib/jsoneditor.min.js';\n\timport CodeMirror from './lib/CodeMirror.svelte';\n\n\texport let resourceName   = 'luaconsole';\n\texport let handler        = 'luaconsole';\n\texport let history        = [];\n\texport let historyidx     = 0;\n\texport let output         = '';\n\texport let onelinecode    = '';\n\texport let multilinecode  = '';\n\texport let expressioncode = '';\n\n\tlet jsonWatcher = null;\n\tlet jsonEditor  = null;\n\tlet outputEl    = null;\n\tlet watchable   = {}\n\n\tconst updateMultilineCode = (e) => {\n\t\tmultilinecode = e.detail.value;\n\t}\n\n\tconst setHandler = () => {\n\t\t\n\t\tfetch(`http://${resourceName}/set_handler`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({name: handler})\n\t\t});\n\n\t}\n\n\tconst exec = (code) => {\n\n\t\tfetch(`http://${resourceName}/exec`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({code, handler})\n\t\t});\n\n\t}\n\n\tconst execOneLine = () => {\n\t\thistory.push(onelinecode);\n\t\texec(onelinecode);\n\t\tonelinecode = '';\n\t}\n\n\tconst execMultiline = () => {\n\t\texec(multilinecode);\n\t}\n\n  const onOneLineKeyUp = (e) => {\n\n    switch(e.keyCode) {\n\n      case 13 : {\n\n        execOneLine();\n\n        break;\n      }\n\n      case 40 : {\n\n        historyidx--;\n\n        if(historyidx < 0)\n          historyidx = history.length;\n\n        if(historyidx < history.length)\n          onelinecode = history[historyidx];\n        else\n          onelinecode = '';\n\n        break;\n      }\n\n      case 38 : {\n\n        historyidx++;\n\n        if(historyidx > history.length)\n          historyidx = 0;\n\n        if(historyidx < history.length)\n          onelinecode = history[historyidx];\n        else\n          onelinecode = '';\n\n        break;\n      }\n\n      default: break;\n\n    }\n\n\t};\n\n\tconst onWatcherKeyUp = async (e) => {\n\n\t\tif(e.keyCode === 13) {\n\n\t\t\tconst rawResponse = await fetch(`http://${resourceName}/watch`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({name: expressioncode})\n\t\t\t});\n\n\t\t\tconst data = await rawResponse.json();\n\t\t\twatchable  = data.obj;\n\t\t\t\n\t\t\tjsonEditor.set(watchable);\n\n\t\t}\n\n\t}\n\n\tconst onJSONChange = (data) => {\n\n    const diff = [];\n\n    let cancel = false;\n\n    const process = (oldObj, newObj, path = []) => {\n\n      if(typeof oldObj == 'object') {\n\n        if(oldObj instanceof Array) {\n\n          let length = oldObj.length;\n\n          if(newObj.length > length)\n            length = newObj.length;\n\n          for(let i=0; i<length; i++)\n            process(oldObj[i], newObj[i], path.concat([i]));\n\n        } else {\n\n          const keys    = Object.keys(oldObj || {});\n          const newKeys = Object.keys(newObj || {});\n\n          for(let i=0; i<newKeys.length; i++)\n            if(keys.indexOf(newKeys[i]) === -1)\n              keys.push(newKeys[i]);\n\n          for(let i=0; i<keys.length; i++) {\n            const k = keys[i];\n            process(oldObj[k], newObj[k], path.concat([k]));\n          }\n\n        }\n\n      } else {\n\n        if(oldObj !== newObj) {\n\n          if(oldObj == '__FUNCTION__')\n            cancel = true;\n          else\n            diff.push({path, value: newObj});\n        }\n\n      }\n\n    }\n\n    process(watchable, data);\n\n    if(cancel) {\n\n      jsonEditor.set(watchable);\n    \n    } else {\n\n      watchable = data;\n\n\t\t\tfetch(`http://${resourceName}/diffwatch`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({diff})\n\t\t\t});\n\n    }\n  }\n\n\twindow.addEventListener('keydown', (e) => {\n\n\t\tif(e.ctrlKey && e.keyCode === 13) {\n\t\t\texecMultiline();\n\t\t}\n\n    if(e.keyCode === 27) {\n\n\t\t\tfetch(`http://${resourceName}/escape`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: '{}'\n\t\t\t});\n\n\t\t}\n\n\n\t});\n\n\twindow.addEventListener('message', (e) => {\n\n\t\tconst msg = e.data;\n\n    switch(msg.action) {\n\n      case 'show' : {\n        document.body.style.display = 'block';\n        break;\n      }\n\n      case 'hide' : {\n        document.body.style.display = 'none';\n        break;\n      }\n\n      case 'print' : {\n\n\t\t\t\toutput += msg.str + '\\n';\n\t\t\t\t\n\t\t\t\toutputEl.scrollIntoView({\n\t\t\t\t\tbehavior: 'instant',\n\t\t\t\t\tblock   : 'end',\n\t\t\t\t\tinline  : 'nearest'\n\t\t\t\t});\n\n        break;\n      }\n\n      case 'clear' : {\n        output = '';\n        break;\n      }\n\n      default: break;\n\n    }\n\n\t});\n\n\tonMount(() => {\n\n    jsonEditor = new JSONEditor(jsonWatcher, {\n      onChangeJSON: data => onJSONChange(data),\n    });\n\n\t});\n\n</script>\n\n<main>\n\n\t<console>\n\t\t<left>\n\t\t\t<output><pre bind:this={outputEl}>{output}</pre></output>\n\t\t\t<oneline>\n\t\t\t\t<input type=\"text\" bind:value={handler}     spellcheck=\"false\" autocorrect=\"off\" on:keyup={setHandler} placeholder=\"handler\">\n\t\t\t\t<input type=\"text\" bind:value={onelinecode} spellcheck=\"false\" autocorrect=\"off\" on:keyup={onOneLineKeyUp} placeholder=\"one line code\"/>\n\t\t\t</oneline>\n\t\t\t<multiline>\n\t\t\t\t<CodeMirror on:change={updateMultilineCode} options={{\n\t\t\t\t\ttheme  : 'monokai',\n\t\t\t\t\ttabSize: 2,\n\t\t\t\t\tmode   : 'text/x-lua'\n\t\t\t\t}}/>\n\t\t\t</multiline>\n\t\t</left>\n\t\t<right>\n\t\t\t<input class=\"expression\" type=\"text\" bind:value={expressioncode} on:keyup={onWatcherKeyUp} spellcheck=\"false\" autocorrect=\"off\" placeholder=\"expression\">\n\t\t\t<div class=\"json-watcher\" bind:this={jsonWatcher}></div>\n\t\t</right>\n\t</console>\n\n</main>\n\n<style>\n\t\n\t@import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap');\n\n\tmain {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100%;;\n\t}\n\n\tinput {\n\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t\tborder: 0;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tfont-family: 'Source Code Pro';\n\t\tcolor: #EEE;\n\t\theight: 32px;\n\t\tline-height: 32px;\n\t}\n\n\tinput:focus, textarea:focus {\n\t\toutline: none;\n\t}\n\n\tconsole {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\tleft {\n\t\twidth: 80%;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\tright {\n\t\twidth: 20%;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tbackground-color: #FFF;\n\t}\n\n\tright > .expression {\n\t\twidth: 100%;\n\t\tbackground-color: #111;\n\t}\n\n\toutput {\n\t\tflex-basis: 50%;\n\t\tmax-height: 50%;\n\t\tbackground-color: #000;\n\t\tfont-family: 'Source Code Pro';\n\t\toverflow-y: auto;\n\t}\n\n\toutput > pre {\n\t\tfont-family: 'Source Code Pro';\n\t}\n\n\toneline {\n\t\twidth: 100%;\n\t\tflex-basis: calc(32px + 10px);\n\t\tcolor: #FFF;\n\t}\n\n\toneline {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\toneline > input {\n\t\theight: 100%;\n\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t}\n\n\toneline > input:nth-child(1) {\n\t\twidth: 15%;\n\t\tbackground-color: rgba(255, 255, 255, 0.75);\n\t\ttext-align: center;\n\t\tcolor: #000;\n\t}\n\n\toneline > input:nth-child(2) {\n\t\twidth: 85%;\n\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t}\n\n\tmultiline {\n\t\tflex-basis: calc(100% - (32px + 10px));\n\t\tposition: relative;\n\t\tcolor: #FFF;\n\t}\n\n</style>",
    "<script>\n  import _CodeMirror from './codemirror.js';\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let value = \"\";\n  export let readonly = false;\n  export let errorLoc = null;\n  export let flex = false;\n  export let lineNumbers = true;\n  export let tab = true;\n  export let options = {};\n\n  let w;\n  let h;\n  let mode;\n\n  // We have to expose set and update methods, rather\n  // than making this state-driven through props,\n  // because it's difficult to update an editor\n  // without resetting scroll otherwise\n  export async function set(new_value, new_mode) {\n    if (new_mode !== mode) {\n      await createEditor((mode = new_mode));\n    }\n\n    value = new_value;\n    updating_externally = true;\n    if (editor) editor.setValue(value);\n    updating_externally = false;\n  }\n\n  export function update(new_value) {\n    value = new_value;\n\n    if (editor) {\n      const { left, top } = editor.getScrollInfo();\n      editor.setValue((value = new_value));\n      editor.scrollTo(left, top);\n    }\n  }\n\n  export function resize() {\n    editor.refresh();\n  }\n\n  export function focus() {\n    editor.focus();\n  }\n\n  const modes = {\n    js: {\n      name: \"javascript\",\n      json: false\n    },\n    json: {\n      name: \"javascript\",\n      json: true\n    },\n    svelte: {\n      name: \"handlebars\",\n      base: \"text/html\"\n    }\n  };\n\n  const refs = {};\n  let editor;\n  let updating_externally = false;\n  let marker;\n  let error_line;\n  let destroyed = false;\n  let CodeMirror;\n\n  $: if (editor && w && h) {\n    editor.refresh();\n  }\n\n  $: {\n    if (marker) marker.clear();\n\n    if (errorLoc) {\n      const line = errorLoc.line - 1;\n      const ch = errorLoc.column;\n\n      marker = editor.markText(\n        { line, ch },\n        { line, ch: ch + 1 },\n        {\n          className: \"error-loc\"\n        }\n      );\n\n      error_line = line;\n    } else {\n      error_line = null;\n    }\n  }\n\n  let previous_error_line;\n  $: if (editor) {\n    if (previous_error_line != null) {\n      editor.removeLineClass(previous_error_line, \"wrap\", \"error-line\");\n    }\n\n    if (error_line && error_line !== previous_error_line) {\n      editor.addLineClass(error_line, \"wrap\", \"error-line\");\n      previous_error_line = error_line;\n    }\n  }\n\n  onMount(() => {\n    if (_CodeMirror) {\n      CodeMirror = _CodeMirror;\n      createEditor(mode || \"svelte\").then(() => {\n        if (editor) editor.setValue(value || \"\");\n      });\n    } else {\n      codemirror_promise.then(async mod => {\n        CodeMirror = mod.default;\n        await createEditor(mode || \"svelte\");\n        if (editor) editor.setValue(value || \"\");\n      });\n    }\n\n    return () => {\n      destroyed = true;\n      if (editor) editor.toTextArea();\n    };\n  });\n\n  let first = true;\n\n  async function createEditor(mode) {\n    if (destroyed || !CodeMirror) return;\n\n    if (editor) editor.toTextArea();\n\n    const opts = {\n      lineNumbers,\n      lineWrapping: true,\n      indentWithTabs: true,\n      indentUnit: 2,\n      tabSize: 2,\n      value: \"\",\n      mode: modes[mode] || {\n        name: mode\n      },\n      readOnly: readonly,\n      autoCloseBrackets: true,\n      autoCloseTags: true,\n      ...options\n    };\n\n    if (!tab)\n      opts.extraKeys = {\n        Tab: tab,\n        \"Shift-Tab\": tab\n      };\n\n    // Creating a text editor is a lot of work, so we yield\n    // the main thread for a moment. This helps reduce jank\n    if (first) await sleep(50);\n\n    if (destroyed) return;\n\n    editor = CodeMirror.fromTextArea(refs.editor, opts);\n\n    editor.on(\"change\", instance => {\n      if (!updating_externally) {\n        const value = instance.getValue();\n        dispatch(\"change\", { value });\n      }\n    });\n\n    if (first) await sleep(50);\n    editor.refresh();\n\n    first = false;\n  }\n\n  function sleep(ms) {\n    return new Promise(fulfil => setTimeout(fulfil, ms));\n  }\n</script>\n\n<style>\n  textarea {\n    visibility: hidden;\n  }\n\n  pre {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: none;\n    padding: 4px 4px 4px 60px;\n    resize: none;\n    font-family: var(--font-mono);\n    font-size: 13px;\n    line-height: 1.7;\n    user-select: none;\n    pointer-events: none;\n    color: #ccc;\n    tab-size: 2;\n    -moz-tab-size: 2;\n  }\n</style>\n\n<textarea tabindex=\"0\" bind:this={refs.editor} readonly {value} />\n{#if !CodeMirror}\n  <pre>{value}</pre>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AA8SC,QAAQ,IAAI,uEAAuE,CAAC,CAAC,AAErF,IAAI,8BAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AAED,KAAK,8BAAC,CAAC,AACN,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,iBAAiB,CAC9B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,AAClB,CAAC,AAED,mCAAK,MAAM,AAAiB,CAAC,AAC5B,OAAO,CAAE,IAAI,AACd,CAAC,AAED,OAAO,8BAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACpB,CAAC,AAED,IAAI,8BAAC,CAAC,AACL,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACvB,CAAC,AAED,KAAK,8BAAC,CAAC,AACN,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,gBAAgB,CAAE,IAAI,AACvB,CAAC,AAED,oBAAK,CAAG,WAAW,eAAC,CAAC,AACpB,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,IAAI,AACvB,CAAC,AAED,MAAM,8BAAC,CAAC,AACP,UAAU,CAAE,GAAG,CACf,UAAU,CAAE,GAAG,CACf,gBAAgB,CAAE,IAAI,CACtB,WAAW,CAAE,iBAAiB,CAC9B,UAAU,CAAE,IAAI,AACjB,CAAC,AAED,qBAAM,CAAG,GAAG,eAAC,CAAC,AACb,WAAW,CAAE,iBAAiB,AAC/B,CAAC,AAED,OAAO,8BAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAC7B,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,OAAO,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACpB,CAAC,AAED,sBAAO,CAAG,KAAK,eAAC,CAAC,AAChB,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC3C,CAAC,AAED,sBAAO,CAAG,oBAAK,WAAW,CAAC,CAAC,AAAC,CAAC,AAC7B,KAAK,CAAE,GAAG,CACV,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAC3C,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,sBAAO,CAAG,oBAAK,WAAW,CAAC,CAAC,AAAC,CAAC,AAC7B,KAAK,CAAE,GAAG,CACV,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC3C,CAAC,AAED,SAAS,8BAAC,CAAC,AACV,UAAU,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CACtC,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,AACZ,CAAC;AClNA,QAAQ,eAAC,CAAC,AACR,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,GAAG,eAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACzB,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,WAAW,CAAC,CAC7B,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,CACpB,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,CAAC,CACX,aAAa,CAAE,CAAC,AAClB,CAAC"
}